name: Create and push cluster OCI


on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:
  create-and-push-oci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # Use Cosign to sign and verify site content as OCI
    - name: Install Cosign
      uses: sigstore/cosign-installer@main

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: github
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          manifests/platform
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=sha

    # - name: Push OCI manifests with SHA tag
    #   run: |
    #     digest_url=$(flux push artifact oci://ghcr.io/danielloader/manifests/platform:$(git rev-parse --short HEAD) \
    #     --ignore-paths='*,!/platform/**' \
    #     --path="." \
    #     --source="$(git config --get remote.origin.url)" \
    #     --revision="$(git rev-parse HEAD)" \
    #     --output json | \
    #     jq -r '. | .repository + "@" + .digest')
    #     cosign sign $digest_url -y

    # - name: Tag with 'latest'
    #   run: |
    #     flux tag artifact oci://ghcr.io/danielloader/manifests/platform:$(git rev-parse --short HEAD) --tag latest
    - name: test
      run: |
        TAG_LIST=${{ steps.meta.outputs.tags }}
        while IFS= read -r line || [[ -n $TAG ]]; do
        echo "... $TAG ..."
        done < <(printf '%s' "$TAG_LIST")